{"version":3,"sources":["components/Navigation.tsx","Style.ts","Util.ts","components/Checkbox.tsx","components/Dropdown.tsx","components/Hero.tsx","views/Login.tsx","views/Register.tsx","views/Manage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Styled","Navigation","styled","div","isLoggedIn","localStorage","getItem","href","onClick","removeItem","Color","apiURL","fetch","query","a","options","method","headers","Accept","Authorization","body","JSON","stringify","window","response","json","data","console","log","Checkbox","label","props","checked","onChange","type","Dropdown","id","selected","title","map","option","index","value","Hero","done","Input","Text","p","linkTypeOptions","description","linkAnalyticsOptions","useState","isShortened","setIsShortened","isMine","setIsMine","url","setUrl","linkType","linkAnalytics","setOption","inputRef","useRef","numShortened","setNumShortened","numClicked","setNumClicked","useEffect","socket","io","Util","on","then","stats","minifiedIndex","visitedIndex","disconnect","handleOptionChange","name","event","target","handleSubmit","preventDefault","variables","isObscured","result","shortenUrl","hash","className","onSubmit","placeholder","current","select","ref","Page","Form","form","Login","useForm","register","errors","email","password","loginUser","token","setItem","location","required","Register","repassword","registerUser","List","Card","Content","Manage","list","setList","setSelected","isUpdatingUrl","setIsUpdatingUrl","updatedUrl","setUpdatedUrl","getList","listOwnURLs","x","find","format","Date","parseInt","createdAt","updateUrl","success","confirm","removeUrl","handleDeleteClick","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c76e1fb7.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport AccountIcon from 'mdi-react/AccountIcon';\nimport MenuIcon from 'mdi-react/MenuIcon';\nimport ExitToAppIcon from 'mdi-react/ExitToAppIcon';\nimport { Color } from '../Style';\n\nconst Styled = {\n  Navigation: styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2em;\n    box-sizing: border-box;\n    background-color: #351064;\n\n    a {\n      text-decoration: none;\n    }\n\n    h1 {\n      color: #e9d8ff;\n    }\n\n    > div > div {\n      display: flex;\n\n      > a {\n        margin-left: 16px;\n      }\n    }\n\n    a {\n      display: flex;\n      align-items: center;\n      color: #e9d8ff;\n\n      svg {\n        margin-left: 0.5em;\n      }\n    }\n  `,\n};\n\nexport const Navigation: React.FC = () => {\n  const isLoggedIn = !!localStorage.getItem('token');\n\n  return (\n    <Styled.Navigation>\n      <a href=\"/\">\n        <h1>Via</h1>\n      </a>\n\n      <div>\n        {!isLoggedIn && (\n          <a href=\"/login\">\n            Sign In <AccountIcon />\n          </a>\n        )}\n        {isLoggedIn && (\n          <div>\n            <a\n              href=\"/\"\n              onClick={() => {\n                localStorage.removeItem('token');\n              }}\n            >\n              Sign Out <ExitToAppIcon />\n            </a>\n            <a href=\"/manage\">\n              My Links <MenuIcon />\n            </a>\n          </div>\n        )}\n      </div>\n    </Styled.Navigation>\n  );\n};\n","export const Color = {\n  primary: '#49227B',\n  action: '#a474e0',\n  text: '#C99FFF',\n};\n\nexport const Font = {\n  header: `'Playfair Display', serif`,\n  body: `'Roboto', sans-serif`,\n};\n","const apiURL = 'http://env-7018596.jelastic.metropolia.fi';\n\nexport { apiURL };\n\nexport const fetch = async (query: any) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `Bearer ${localStorage.getItem('token') || ''}`,\n    },\n    body: JSON.stringify(query),\n  };\n\n  try {\n    const response = await window.fetch(apiURL + '/graphql', options);\n    const json = await response.json();\n    return json.data;\n  } catch (e) {\n    console.log(e);\n    return false;\n  }\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport CheckboxBlankIcon from 'mdi-react/CheckboxBlankIcon';\nimport CheckboxMarkedIcon from 'mdi-react/CheckboxMarkedIcon';\nimport { Color } from '../Style';\n\nconst Styled = {\n  Checkbox: styled.label<{ checked: boolean }>`\n    position: relative;\n    display: block;\n    height: 32px;\n    padding-left: 44px;\n    line-height: 32px;\n    user-select: none;\n    cursor: pointer;\n\n    input {\n      position: absolute;\n      opacity: 0;\n      cursor: pointer;\n      height: 0;\n      width: 0;\n    }\n\n    svg {\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 32px;\n      width: 32px;\n      fill: ${(props) => (props.checked ? '#fff' : Color.action)};\n    }\n  `,\n};\n\nexport const Checkbox: React.FC<{\n  label: string;\n  checked: boolean;\n  onChange: (event: any) => void;\n}> = ({ label, checked, onChange }) => {\n  return (\n    <Styled.Checkbox checked={checked}>\n      {label}\n      <input type=\"checkbox\" checked={checked} onChange={onChange} />\n      {checked ? <CheckboxMarkedIcon /> : <CheckboxBlankIcon />}\n    </Styled.Checkbox>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport ChevronDownIcon from 'mdi-react/ChevronDownIcon';\nimport { Color } from '../Style';\n\nconst Styled = {\n  Dropdown: styled.div`\n    position: relative;\n    display: inline-block;\n    margin: 0 4px;\n    padding-right: 24px;\n    z-index: 1;\n    color: #f5edff;\n\n    &:before {\n      content: '';\n      display: block;\n      position: absolute;\n      bottom: -1px;\n      left: -2px;\n      width: calc(100% + 4px);\n      height: 8px;\n      background-color: #6835a8;\n      z-index: -1;\n    }\n\n    svg {\n      position: absolute;\n      margin: -2px 0 0 0;\n    }\n\n    select {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      left: 0;\n      top: 0;\n      opacity: 0;\n      cursor: pointer;\n    }\n  `,\n};\n\nexport interface IDropdownOption {\n  title: string;\n  description: string;\n}\n\nexport const Dropdown: React.FC<{\n  id: string;\n  selected: number;\n  options: IDropdownOption[];\n  onChange: (event: any) => void;\n}> = ({ id, selected, options, onChange }) => {\n  const selectedOption = options[selected];\n\n  return (\n    <Styled.Dropdown>\n      <b>{options[selected].title}</b>\n      <ChevronDownIcon />\n\n      <select id={id} onChange={onChange}>\n        {options.map((option, index) => (\n          <option value={index} selected={selected === index}>\n            {option.title}\n          </option>\n        ))}\n      </select>\n    </Styled.Dropdown>\n  );\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Color } from '../Style';\nimport * as Util from '../Util';\nimport ArrowRightCircleOutlineIcon from 'mdi-react/ArrowRightCircleOutlineIcon';\nimport CheckboxMarkedCircleOutlineIcon from 'mdi-react/CheckboxMarkedCircleOutlineIcon';\nimport ArrowBottomLeftThickIcon from 'mdi-react/ArrowBottomLeftThickIcon';\nimport io from 'socket.io-client';\n\nimport { Checkbox } from './Checkbox';\nimport { Dropdown } from './Dropdown';\n\nconst Styled = {\n  Hero: styled.div<{ done: boolean }>`\n    display: flex;\n    padding: 200px;\n    width: 100vw;\n    height: 100vh;\n    background-color: ${Color.primary};\n    box-sizing: border-box;\n    color: ${Color.text};\n\n    .side {\n      flex: 1;\n\n      &.text {\n        flex: initial;\n        width: 550px;\n\n        p {\n          font-size: 1.5em;\n        }\n      }\n    }\n\n    h1 {\n      font-size: 4em;\n      color: #e9d8ff;\n    }\n\n    h3 {\n      position: relative;\n      margin-left: 32px;\n      padding-left: 28px;\n\n      svg {\n        position: absolute;\n        left: 0;\n      }\n    }\n\n    form {\n      input {\n        padding: 16px;\n        width: 100%;\n        font-size: 2em;\n        border-radius: 6px 0 0 6px;\n        background-color: ${(props) => (props.done ? '#fff' : '#c99fff')};\n        border: none;\n        outline: none;\n\n        &::placeholder {\n          color: #814cc6;\n          opacity: 1;\n        }\n      }\n    }\n  `,\n  Input: styled.div<{ done: boolean }>`\n    display: flex;\n    margin: 32px 0;\n\n    button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 70px;\n      width: 120px;\n      background-image: none;\n      border: none;\n      outline: none;\n      border-radius: 0 6px 6px 0;\n      background-color: ${(props) => (props.done ? '#fff' : '#a474e0')};\n\n      svg {\n        width: 32px;\n        height: 32px;\n        fill: #49227b;\n      }\n    }\n  `,\n  Text: styled.p`\n    font-size: 1.2em;\n  `,\n};\n\nconst linkTypeOptions = [\n  {\n    title: 'as short as possible',\n    description:\n      'The link will be short and sweet. This is the best option when sharing something publicly, like on Twitter.',\n  },\n  {\n    title: 'impossible to quess',\n    description:\n      'The link will be long and extremely hard to guess. Pick this option when privacy is a concern.',\n  },\n  /*\n  {\n    title: 'secured with a password',\n    description:\n      'The link will be short, but only those with the password can access it.',\n  },\n  */\n];\n\nconst linkAnalyticsOptions = [\n  {\n    title: 'I want to see',\n    description:\n      'You will have access to an admin page where detailed usage statistics can be viewed.',\n  },\n  {\n    title: 'I dont want to see',\n    description:\n      'The amount of clicks will be visible, but no detailed statistics will be recorded.',\n  },\n  {\n    title: 'I dont want anyone to see',\n    description:\n      'Nothing will be recorded from this link. This option requires the link to have a deadline.',\n  },\n];\n\nconst shortenedBaseUrl = Util.apiURL + '/';\n\nexport const Hero: React.FC = () => {\n  const isLoggedIn = !!localStorage.getItem('token');\n\n  const [isShortened, setIsShortened] = useState<boolean>(false);\n  const [isMine, setIsMine] = useState<boolean>(isLoggedIn);\n  const [url, setUrl] = useState<string>('');\n  const [option, setOption] = useState<{\n    linkType: number;\n    linkAnalytics: number;\n  }>({ linkType: 0, linkAnalytics: 0 });\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [numShortened, setNumShortened] = useState<string>('...');\n  const [numClicked, setNumClicked] = useState<string>('...');\n\n  useEffect(() => {\n    const socket = io(Util.apiURL);\n\n    socket.on('minifiedIndex', (data: number) => {\n      setNumShortened('' + data);\n    });\n\n    socket.on('visitedIndex', (data: number) => {\n      setNumClicked('' + data);\n    });\n\n    Util.fetch({\n      query: `\n        {\n          stats {\n            minifiedIndex,\n            visitedIndex\n          }\n        }\n      `,\n    }).then((data) => {\n      if (data && data.stats) {\n        setNumShortened('' + data.stats.minifiedIndex);\n        setNumClicked('' + data.stats.visitedIndex);\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleUrlChange = (event: any) => {\n    if (isShortened) return;\n    setUrl(event.target.value);\n  };\n\n  const handleUrlClick = (event: any) => {\n    if (!isShortened) return;\n    inputRef.current?.select();\n  };\n\n  const handleMineChange = (event: any) => {\n    setIsMine(event.target.checked);\n  };\n\n  const handleOptionChange = (name: string) => (event: any) => {\n    setOption({ ...option, [name]: event.target.value });\n  };\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n\n    if (isShortened) return;\n\n    const result = await Util.fetch({\n      query: `\n        mutation Shorten($url: String!, $isObscured: Boolean!, $isMine: Boolean!) {\n          shortenUrl(url: $url, isObscured: $isObscured, isMine: $isMine) {\n            hash\n          }\n        }\n      `,\n      variables: {\n        url,\n        isObscured: option.linkType == 1,\n        isMine,\n      },\n    });\n\n    if (result && result.shortenUrl && result.shortenUrl.hash) {\n      setUrl(`${shortenedBaseUrl}${result.shortenUrl.hash}`);\n      setIsShortened(true);\n    } else {\n      setUrl('');\n    }\n  };\n\n  return (\n    <Styled.Hero done={isShortened}>\n      <div className=\"side text\">\n        <h1>\n          Share with\n          <br />\n          confidence\n        </h1>\n        <p>\n          Shorten your links with <b>Via</b>\n          <br />\n          and gain back control\n        </p>\n\n        <ul>\n          <li>\n            <b>{numShortened}</b> links shortened\n          </li>\n          <li>\n            <b>{numClicked}</b> links clicked\n          </li>\n        </ul>\n      </div>\n      <div className=\"side\">\n        <form onSubmit={handleSubmit}>\n          <h3>\n            <ArrowBottomLeftThickIcon />\n            Just paste any link here and see the magic happen\n          </h3>\n\n          <Styled.Input done={isShortened}>\n            <input\n              type=\"text\"\n              placeholder=\"https://\"\n              value={url}\n              onChange={handleUrlChange}\n              onClick={handleUrlClick}\n              ref={inputRef}\n            />\n\n            {!isShortened ? (\n              <button type=\"submit\">\n                <ArrowRightCircleOutlineIcon />\n              </button>\n            ) : (\n              <button>\n                <CheckboxMarkedCircleOutlineIcon />\n              </button>\n            )}\n          </Styled.Input>\n\n          <Styled.Text>\n            I want my link to be{' '}\n            <Dropdown\n              id=\"linkType\"\n              selected={option.linkType}\n              options={linkTypeOptions}\n              onChange={handleOptionChange('linkType')}\n            />\n            <br />\n            and{' '}\n            <Dropdown\n              id=\"linkAnalytics\"\n              selected={option.linkAnalytics}\n              options={linkAnalyticsOptions}\n              onChange={handleOptionChange('linkAnalytics')}\n            />{' '}\n            how it is used.\n          </Styled.Text>\n\n          {isLoggedIn && (\n            <Checkbox\n              label=\"Link this URL to my account\"\n              checked={isMine}\n              onChange={handleMineChange}\n            />\n          )}\n\n          {/*\n          <input type=\"email\" placeholder=\"Email\" />\n          <input type=\"password\" placeholder=\"Password\" />\n          <input type=\"date\" placeholder=\"Time\" />\n          */}\n        </form>\n      </div>\n    </Styled.Hero>\n  );\n};\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { Color } from '../Style';\nimport * as Util from '../Util';\n\nconst Styled = {\n  Page: styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    height: 100vh;\n    background-color: ${Color.primary};\n  `,\n  Form: styled.form`\n    display: flex;\n    flex-direction: column;\n    padding: 2em;\n    width: 300px;\n    border-radius: 6px;\n    background-color: #fff;\n\n    h2 {\n      margin: 0 0 1em 0;\n      text-align: center;\n    }\n\n    p {\n      margin: 2em 0 0 0;\n      text-align: center;\n      font-size: 0.8em;\n    }\n  `,\n  Input: styled.div`\n    margin-bottom: 1em;\n\n    label {\n      display: block;\n      margin-bottom: 4px;\n      font-size: 0.8em;\n    }\n\n    input {\n      padding: 8px;\n      width: 100%;\n      box-sizing: border-box;\n    }\n  `,\n};\n\nexport const Login: React.FC = () => {\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = async (data: any) => {\n    const result = await Util.fetch({\n      query: `\n        mutation Login($email: String!, $password: String!) {\n          loginUser(email: $email, password: $password) {\n            token\n          }\n        }\n      `,\n      variables: {\n        email: data.email,\n        password: data.password,\n      },\n    });\n\n    if (result && result.loginUser && result.loginUser.token) {\n      localStorage.setItem('token', result.loginUser.token);\n      window.location.href = '/';\n    } else {\n      // TODO: Show error\n    }\n  };\n\n  return (\n    <Styled.Page>\n      <Styled.Form onSubmit={handleSubmit(onSubmit)}>\n        <h2>Sign In</h2>\n\n        <Styled.Input>\n          <label>Email</label>\n          <input ref={register({ required: true })} name=\"email\" type=\"email\" />\n        </Styled.Input>\n        <Styled.Input>\n          <label>Password</label>\n          <input\n            ref={register({ required: true })}\n            name=\"password\"\n            type=\"password\"\n          />\n        </Styled.Input>\n\n        <button type=\"submit\">Login</button>\n\n        <p>\n          No account yet? <a href=\"/register\">Create a new account.</a>\n        </p>\n      </Styled.Form>\n    </Styled.Page>\n  );\n};\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { Color } from '../Style';\nimport * as Util from '../Util';\n\nconst Styled = {\n  Page: styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    height: 100vh;\n    background-color: ${Color.primary};\n  `,\n  Form: styled.form`\n    display: flex;\n    flex-direction: column;\n    padding: 2em;\n    width: 300px;\n    border-radius: 6px;\n    background-color: #fff;\n\n    h2 {\n      margin: 0 0 1em 0;\n      text-align: center;\n    }\n\n    p {\n      margin: 2em 0 0 0;\n      text-align: center;\n      font-size: 0.8em;\n    }\n  `,\n  Input: styled.div`\n    margin-bottom: 1em;\n\n    label {\n      display: block;\n      margin-bottom: 4px;\n      font-size: 0.8em;\n    }\n\n    input {\n      padding: 8px;\n      width: 100%;\n      box-sizing: border-box;\n    }\n  `,\n};\n\nexport const Register: React.FC = () => {\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = async (data: any) => {\n    if (data.password != data.repassword) return;\n\n    const result = await Util.fetch({\n      query: `\n        mutation Register($email: String!, $password: String!) {\n          registerUser(email: $email, password: $password) {\n            token\n          }\n        }\n      `,\n      variables: {\n        email: data.email,\n        password: data.password,\n      },\n    });\n\n    if (result && result.registerUser && result.registerUser.token) {\n      localStorage.setItem('token', result.registerUser.token);\n      window.location.href = '/';\n    } else {\n      // TODO: Show error\n    }\n  };\n\n  return (\n    <Styled.Page>\n      <Styled.Form onSubmit={handleSubmit(onSubmit)}>\n        <h2>Register</h2>\n\n        <Styled.Input>\n          <label>Email</label>\n          <input ref={register({ required: true })} name=\"email\" type=\"email\" />\n        </Styled.Input>\n        <Styled.Input>\n          <label>Password</label>\n          <input\n            ref={register({ required: true })}\n            name=\"password\"\n            type=\"password\"\n          />\n        </Styled.Input>\n        <Styled.Input>\n          <label>Re-Password</label>\n          <input\n            ref={register({ required: true })}\n            name=\"repassword\"\n            type=\"password\"\n          />\n        </Styled.Input>\n\n        <button type=\"submit\">Register</button>\n\n        <p>\n          Already have an account? <a href=\"/login\">Login.</a>\n        </p>\n      </Styled.Form>\n    </Styled.Page>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { format } from 'date-fns';\nimport styled from 'styled-components';\nimport LinkIcon from 'mdi-react/LinkIcon';\nimport * as Util from '../Util';\nimport { Color } from '../Style';\n\nconst Styled = {\n  Page: styled.div`\n    display: flex;\n    background-color: ${Color.primary};\n  `,\n  List: styled.div`\n    width: 300px;\n  `,\n  Card: styled.div`\n    margin: 16px 0 0 16px;\n    padding: 16px;\n    background-color: #5a328e;\n    border-radius: 4px;\n    user-select: none;\n    cursor: pointer;\n\n    h4 {\n      margin: 0;\n      font-weight: normal;\n      color: #e9d8ff;\n    }\n\n    > p {\n      margin: 0.5em 0 0 0;\n      font-size: 0.8em;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      color: #c99fff;\n    }\n\n    div {\n      display: flex;\n      justify-content: space-between;\n      font-size: 0.8em;\n      color: #c99fff;\n\n      p {\n        margin: 1.5em 0 0 0;\n      }\n    }\n  `,\n  Content: styled.div`\n    flex: 1;\n    padding-left: 32px;\n\n    h1 {\n      color: #e9d8ff;\n    }\n\n    a {\n      display: flex;\n      align-items: center;\n      color: ${Color.text};\n\n      svg {\n        padding-right: 8px;\n      }\n    }\n\n    button {\n      padding: 8px;\n    }\n  `,\n};\n\nconst shortenedBaseUrl = Util.apiURL + '/';\n\nexport const Manage: React.FC = () => {\n  const [list, setList] = useState<any[]>([]);\n  const [selected, setSelected] = useState<any | null>(null);\n  const [isUpdatingUrl, setIsUpdatingUrl] = useState<boolean>(false);\n  const [updatedUrl, setUpdatedUrl] = useState<string>('');\n\n  const getList = async () => {\n    const result = await Util.fetch({\n      query: `\n        {\n          listOwnURLs {\n            hash,\n            url,\n            title,\n            createdAt\n          }\n        }\n      `,\n    });\n\n    if (result && result.listOwnURLs) {\n      setList(result.listOwnURLs);\n      setSelected(null);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      await getList();\n    })();\n  }, []);\n\n  const handleCardClick = (hash: string) => () => {\n    setSelected(list.find((x) => x.hash === hash));\n  };\n\n  const handleDeleteClick = (hash: string) => async () => {\n    if (window.confirm('This cannot be reversed. Are you sure?')) {\n      const result = await Util.fetch({\n        query: `\n          mutation Remove($hash: String!) {\n            removeUrl(hash: $hash) {\n              success\n            }\n          }\n        `,\n        variables: {\n          hash,\n        },\n      });\n\n      if (result.removeUrl.success) {\n        await getList();\n      }\n    }\n  };\n\n  const handleUpdateClick = (hash: string) => async () => {\n    setIsUpdatingUrl(!isUpdatingUrl);\n\n    if (isUpdatingUrl && updatedUrl) {\n      const result = await Util.fetch({\n        query: `\n          mutation Update($hash: String!, $url: String!) {\n            updateUrl(hash: $hash, url: $url) {\n              success\n            }\n          }\n        `,\n        variables: {\n          hash,\n          url: updatedUrl,\n        },\n      });\n\n      if (result.updateUrl.success) {\n        await getList();\n      }\n    }\n\n    setUpdatedUrl('');\n  };\n\n  return (\n    <Styled.Page>\n      <Styled.List>\n        {list.map((x) => (\n          <Styled.Card onClick={handleCardClick(x.hash)}>\n            <h4>{x.title}</h4>\n            <p>{x.url}</p>\n            <div>\n              <p>1 Click</p>\n              <p>{format(new Date(parseInt(x.createdAt)), 'dd.MM.yyyy')}</p>\n            </div>\n          </Styled.Card>\n        ))}\n      </Styled.List>\n      <Styled.Content>\n        {selected && (\n          <>\n            <h1>{selected.title}</h1>\n            <p>\n              <a href={selected.url}>\n                <LinkIcon /> {selected.url}\n              </a>\n            </p>\n            <p>\n              <a href={`${shortenedBaseUrl}${selected.hash}`}>\n                <LinkIcon /> {`${shortenedBaseUrl}${selected.hash}`}\n              </a>\n            </p>\n            {isUpdatingUrl && (\n              <input\n                type=\"text\"\n                value={updatedUrl}\n                onChange={(event: any) => setUpdatedUrl(event.target.value)}\n              />\n            )}\n            <button onClick={handleUpdateClick(selected.hash)}>Update</button>\n            <button onClick={handleDeleteClick(selected.hash)}>Delete</button>\n          </>\n        )}\n      </Styled.Content>\n    </Styled.Page>\n  );\n};\n","import React from 'react';\nimport { Navigation } from './components/Navigation';\nimport { Hero } from './components/Hero';\nimport { Login } from './views/Login';\nimport { Register } from './views/Register';\nimport { Manage } from './views/Manage';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Navigation />\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/manage\">\n          <Manage />\n        </Route>\n        <Route path=\"/\">\n          <Hero />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}